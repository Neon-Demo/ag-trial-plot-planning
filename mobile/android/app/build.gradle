plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
    id 'kotlin-parcelize'
}

android {
    namespace 'com.agtrial.planner'
    compileSdk 33

    defaultConfig {
        applicationId "com.agtrial.planner"
        minSdk 26
        targetSdk 33
        versionCode 1
        versionName "1.0.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        // Room schema export
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    signingConfigs {
        release {
            // Configure these in gradle.properties or through environment variables
            storeFile file(project.findProperty('RELEASE_STORE_FILE') ?: "debug.keystore")
            storePassword project.findProperty('RELEASE_STORE_PASSWORD') ?: "android"
            keyAlias project.findProperty('RELEASE_KEY_ALIAS') ?: "androiddebugkey"
            keyPassword project.findProperty('RELEASE_KEY_PASSWORD') ?: "android"
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
            buildConfigField "String", "API_BASE_URL", "\"https://api-dev.agtrial-planner.com/v1/\""
            buildConfigField "boolean", "ENABLE_LOGS", "true"
            signingConfig signingConfigs.debug
        }
        
        staging {
            applicationIdSuffix ".staging"
            versionNameSuffix "-staging"
            buildConfigField "String", "API_BASE_URL", "\"https://api-staging.agtrial-planner.com/v1/\""
            buildConfigField "boolean", "ENABLE_LOGS", "true"
            signingConfig signingConfigs.debug
            debuggable true
        }
        
        release {
            buildConfigField "String", "API_BASE_URL", "\"https://api.agtrial-planner.com/v1/\""
            buildConfigField "boolean", "ENABLE_LOGS", "false"
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    buildFeatures {
        compose true
        buildConfig true
    }
    
    composeOptions {
        kotlinCompilerExtensionVersion compose_compiler_version
    }
    
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
            excludes += '/*.properties'
            excludes += 'META-INF/LICENSE*'
        }
    }
}

dependencies {
    // Core Android dependencies
    implementation 'androidx.core:core-ktx:1.10.1'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.activity:activity-compose:1.7.2'
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-compose:$lifecycle_version"
    implementation "androidx.work:work-runtime-ktx:$work_version"
    
    // Compose dependencies
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation "androidx.compose.material3:material3:1.1.1"
    implementation "androidx.compose.material:material-icons-extended:$compose_version"
    implementation "androidx.navigation:navigation-compose:$compose_navigation_version"
    implementation "androidx.hilt:hilt-navigation-compose:$compose_hilt_navigation_version"
    implementation "io.coil-kt:coil-compose:$coil_version"
    
    // Accompanist
    implementation "com.google.accompanist:accompanist-permissions:$accompanist_version"
    implementation "com.google.accompanist:accompanist-systemuicontroller:$accompanist_version"
    implementation "com.google.accompanist:accompanist-navigation-animation:$accompanist_version"
    
    // Room for local database
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    
    // DataStore for preferences
    implementation "androidx.datastore:datastore-preferences:$datastore_version"
    
    // Dagger Hilt for dependency injection
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"
    implementation "androidx.hilt:hilt-work:1.0.0"
    kapt "androidx.hilt:hilt-compiler:1.0.0"
    
    // Retrofit for networking
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"
    
    // Moshi for JSON parsing
    implementation "com.squareup.moshi:moshi:$moshi_version"
    implementation "com.squareup.moshi:moshi-kotlin:$moshi_version"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshi_version"
    
    // Maps and location
    implementation "com.google.android.gms:play-services-maps:$google_maps_version"
    implementation "com.google.android.gms:play-services-location:$google_location_version"
    implementation "com.mapbox.maps:android:$mapbox_version"
    implementation "com.mapbox.navigation:android:$mapbox_navigation_version"
    
    // CameraX for image capture
    implementation "androidx.camera:camera-camera2:$camerax_version"
    implementation "androidx.camera:camera-lifecycle:$camerax_version"
    implementation "androidx.camera:camera-view:$camerax_version"
    
    // Biometric authentication
    implementation "androidx.biometric:biometric:$biometric_version"
    
    // Authentication providers
    implementation "com.google.android.gms:play-services-auth:$google_auth_version"
    implementation "com.microsoft.identity.client:msal:$microsoft_auth_version"
    
    // Logging
    implementation "com.jakewharton.timber:timber:$timber_version"
    
    // Testing dependencies
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.mockito:mockito-core:5.5.0'
    testImplementation 'org.mockito.kotlin:mockito-kotlin:5.1.0'
    testImplementation 'app.cash.turbine:turbine:1.0.0'
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
    testImplementation "androidx.arch.core:core-testing:2.2.0"
    testImplementation "com.google.truth:truth:1.1.4"
    testImplementation "androidx.room:room-testing:$room_version"
    
    // Android testing
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    
    // Debug implementations
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakcanary_version"
}